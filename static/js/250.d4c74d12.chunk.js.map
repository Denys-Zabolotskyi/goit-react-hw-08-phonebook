{"version":3,"file":"static/js/250.d4c74d12.chunk.js","mappings":"mOAEaA,EAAOC,EAAAA,EAAAA,KAAH,oHAOJC,EAAYD,EAAAA,EAAAA,MAAH,2GAOTE,EAAYF,EAAAA,EAAAA,MAAH,2GAOTG,EAAaH,EAAAA,EAAAA,OAAH,gZ,6BCgBvB,EAnCoB,WAClB,IAAMI,GAAWC,EAAAA,EAAAA,MAWjB,OACE,UAACN,EAAD,CAAMO,SAViB,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAOD,KAAKE,MACrBC,EAASL,EAAEG,OAAOE,OAAOD,MAC/BP,GAASS,EAAAA,EAAAA,IAAW,CAAEJ,KAAAA,EAAMG,OAAAA,KAC5BE,QAAQC,IAAI,CAAEN,KAAAA,EAAMG,OAAAA,IACpBL,EAAEG,OAAOM,OACV,EAGC,WACE,SAACf,EAAD,CAAWgB,QAAQ,cAAnB,mBACA,SAACf,EAAD,CACEgB,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAACpB,EAAD,CAAWgB,QAAQ,iBAAnB,qBACA,SAACf,EAAD,CACEgB,KAAK,MACLT,KAAK,SACLU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAAClB,EAAD,CAAYe,KAAK,SAAjB,2BAGL,E,UCnCYI,EAAOtB,EAAAA,EAAAA,GAAH,wEAKJuB,EAAOvB,EAAAA,EAAAA,GAAH,uGAMJwB,EAASxB,EAAAA,EAAAA,OAAH,0ZCbNyB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EC0C9B,EAhCoB,WAClB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXsB,GAAWI,EAAAA,EAAAA,IAAYN,GAEvBK,GAASC,EAAAA,EAAAA,IAAYF,GAe3B,OAJAG,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,SAACkB,EAAD,WAbKQ,EAGEH,EAASG,QAAO,SAAAI,GAAO,OAC5BA,EAAQzB,KAAK0B,cAAcC,SAASN,EAAOK,cADf,IAFrBR,GAamBU,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OAC5B,UAACW,EAAD,YACE,yBACGd,EADH,MACYG,MAEZ,SAACY,EAAD,CAAQe,QAAS,kBAAMnC,GAASoC,EAAAA,EAAAA,IAAcF,GAA7B,EAAjB,sBAJSA,EADiB,KAUnC,E,mBCzCYG,EAAQzC,EAAAA,EAAAA,MAAH,iLAUL0C,EAAQ1C,EAAAA,EAAAA,MAAH,4H,UCJZ2C,EAAS,WACb,IAAMvC,GAAWC,EAAAA,EAAAA,MACXM,GAAQoB,EAAAA,EAAAA,IAAYF,GAO1B,OACE,UAACY,EAAD,qCAEE,SAACC,EAAD,CACExB,KAAK,OACLT,KAAK,SACLE,MAAOA,EACPiC,SAZiB,SAAAC,GACrB,IAAMC,EAAaD,EAAInC,OAAOC,MAC9BP,GAAS2C,EAAAA,EAAAA,GAAaD,GACvB,MAaF,EAEDH,EAAOK,SAAW,CAChBrC,MAAOsC,IAAAA,OAAAA,WACPL,SAAUK,IAAAA,KAAAA,YAGZ,QCrBA,EATkB,WAChB,OACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C,mCCHD,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIvD,KAAO,sBACLuD,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACN7C,OAAQ6C,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAenB,UAAYmB,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  border: 2px solid gray;\n`;\n\nexport const FormLabel = styled.label`\n  margin-top:10px;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const FormInput = styled.input`\n  margin-top:10px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n`;\n\nexport const FormButton = styled.button`\n  margin: 15px auto 10px;\n  width: 150px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 10px;\n  border: 2px solid #fff;\n  font-size: 20px;\n  color: #fff;\n  background-color: #8c98ba;\n  text-align: center;\n  transition: all 200ms linear;\n  cursor: pointer;\n  :hover {\n    border: 2px solid #8c98ba;\n    color: #8c98ba;\n    background-color: #fff;\n  }\n`;","import { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    dispatch(addContact({ name, number }));\n    console.log({ name, number });\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleAddContact}>\n      <FormLabel htmlFor=\"contat_name\">Name</FormLabel>\n      <FormInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <FormLabel htmlFor=\"contact_number\">Number</FormLabel>\n      <FormInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 10px;\n  background-color: #cccccc;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Button = styled.button`\n  height: 35px;\n  padding: 5px;\n  width: 100px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  border-radius: 10px;\n  border: 2px solid #fff;\n  color: #fff;\n  background-color: #8c98ba;\n  text-align: center;\n  transition: all 200ms linear;\n  cursor: pointer;\n  :hover {\n    border: 2px solid #8c98ba;\n    color: #8c98ba;\n    background-color: #fff;\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { List, Item, Button } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/contactsSelectors';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(getFilter);\n\n  const filterContactsOnChange = () => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {filterContactsOnChange().map(({ id, name, number }) => (\n        <Item key={id}>\n          <p>\n            {name} : {number}\n          </p>\n          <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import styled from '@emotion/styled';\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto 0;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n  margin-top:10px;\n  width: 210px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onHandelChange = evt => {\n    const inputValue = evt.target.value;\n    dispatch(changeFilter(inputValue));\n  };\n\n  return (\n    <Label>\n      Finde contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onHandelChange}\n      />\n    </Label>\n  );\n};\n\nFilter.propType = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nconst PhoneBook = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default PhoneBook;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","dispatch","useDispatch","onSubmit","e","preventDefault","name","target","value","number","addContact","console","log","reset","htmlFor","type","pattern","title","required","List","Item","Button","getContacts","state","contacts","items","getFilter","filter","useSelector","useEffect","fetchContacts","contact","toLowerCase","includes","map","id","onClick","deleteContact","Label","Input","Filter","onChange","evt","inputValue","changeFilter","propType","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}